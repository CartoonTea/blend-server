{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"std",
				"stdlib"
			],
			[
				"get",
				"get_sentiment_classifier"
			],
			[
				"case",
				"casefolds"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"command_palette":
	{
		"height": 203.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"syntax:cl",
				"Set Syntax: Clojure"
			],
			[
				"repl",
				"SublimeREPL: Clojure"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"colo",
				"Colorsublime: Install Theme"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 529.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
			"python",
			"ls",
			"lein run",
			"Package Control: Install Package",
			"Package Control: Install Package'",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/gregrtw/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/gregrtw/Dropbox/Screenshots/Screenshot 2014-12-22 19.30.51.png",
		"/Users/gregrtw/Comp428/floyd.cpp",
		"/Users/gregrtw/Documents/Comp428/README.txt",
		"/Users/gregrtw/Comp428/A3/input16.txt",
		"/Users/gregrtw/Comp428/floyd",
		"/Users/gregrtw/Comp428/floydSeq.cpp",
		"/Users/gregrtw/Comp428/testing",
		"/Users/gregrtw/Comp428/testing.c",
		"/Users/gregrtw/ConcordiaCrawler/websphinx/scrape_mcgill.py",
		"/Users/gregrtw/ConcordiaCrawler/websphinx/ece",
		"/Users/gregrtw/ConcordiaCrawler/mcgill-data/ece/index.html",
		"/Users/gregrtw/ConcordiaCrawler/websphinx/url_list_original.txt",
		"/Users/gregrtw/ConcordiaCrawler/scrapy/crawl_mcgill/crawl_mcgill/spiders/mcgill.py",
		"/Users/gregrtw/ConcordiaCrawler/scrapy/crawl_mcgill/crawl_mcgill/items.py",
		"/Users/gregrtw/ConcordiaCrawler/scrapy/crawl_mcgill/scraped_data.json",
		"/Users/gregrtw/ConcordiaCrawler/app/scape_ece.py",
		"/Users/gregrtw/ConcordiaCrawler/.gitignore",
		"/Users/gregrtw/Comp428/untitled",
		"/Users/gregrtw/ConcordiaCrawler/app/indexer.py",
		"/Users/gregrtw/ConcordiaCrawler/data/computer-science-software-engineering/research/industry-sponsors.html",
		"/Users/gregrtw/ConcordiaCrawler/data/info-systems-eng/about/staff.html",
		"/Users/gregrtw/ConcordiaCrawler/data/mechanical-industrial/facilities-services/teaching-labs.html",
		"/Users/gregrtw/comp479/test.py",
		"/Users/gregrtw/.ssh/id_rsa.pub",
		"/Users/gregrtw/Documents/Gregory_Houle_A4_6549098",
		"/Users/gregrtw/Documents/hw4_comp335.pdf",
		"/Users/gregrtw/information_retrieval/src/ir479/part2.clj",
		"/Users/gregrtw/information_retrieval/src/ir479/spimi.clj",
		"/Users/gregrtw/information_retrieval/stopword.txt",
		"/Users/gregrtw/information_retrieval/src/ir479/design-ideas.clj",
		"/Users/gregrtw/information_retrieval/project.clj",
		"/Users/gregrtw/Library/Application Support/Sublime Text 3/Packages/User/SublimeREPL.sublime-settings",
		"/Users/gregrtw/projects/profiles.clj",
		"/Users/gregrtw/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/gregrtw/information_retrieval/test/ir479/core_test.clj",
		"/Users/gregrtw/information_retrieval/src/ir479/core.clj"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 106.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\\?key(.*)",
			"?key",
			"infile = 'websphinx.txt'\noutfile = 'url_list.txt' \npattern = \"retrieving \\[(.*)\\]\"\nurllist = []\n\nwith open(infile, 'r') as f:\n    lines = f.readlines()\n\nfor line in lines:\n    match = re.search(pattern, line)\n    if match:\n        urls = match.group(1) + '\\n'\n        print urls\n        urllist.append(urls)\n\nwith open(outfile, 'w') as g:\n    g.seek(0)\n    g.writelines(urllist)",
			":",
			"lucene",
			"print",
			"code",
			".\n",
			"packet",
			" \n",
			" ",
			"\"",
			"14"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"",
			"\\n",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "gulpfile.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 191.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
